<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/blueprint"
       xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
<bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
       <property admin="brokerURL" value="tcp://localhost:61616"/>
       <property name="userName" value="admin"/>
       <property name="password" value="admin"/>
</bean>


  <camelContext trace="false" id="blueprintContext" xmlns="http://camel.apache.org/schema/blueprint">
  <route id="Camel_Splitter_Route">
    <from uri="activemq:queue:demo1?username=admin&amp;password=admin"/>
    <choice>
      <when>
        <xpath>//destination[text()='Number1']</xpath>
        <log message="Number1 route invoked"/>
        <setHeader headerName="id">
          <xpath>//id/text()</xpath>
        </setHeader>
        <split>
          <xpath resultType="java.lang.String">//message_payload/text()</xpath>
          <log message="Routed ${header.id} to Number1 QUEUE"/>
          <to uri="activemq:queue:demo2?username=admin&amp;password=admin"/>
        </split>
      </when>
      <when>
        <xpath>//destination[text()='Number2']</xpath>
        <log message="Number2 route invoked"/>
        <setHeader headerName="id">
          <xpath>//id/text()</xpath>
        </setHeader>
        <split>
          <xpath resultType="java.lang.String">//message_payload/text()</xpath>
          <log message="Routed ${header.id} to Number2 QUEUE"/>
          <to uri="activemq:queue:demo2?username=admin&amp;password=admin"/>
        </split>
      </when>
      <when>
        <xpath>//destination[text()='Number3']</xpath>
        <log message="Number3 route invoked"/>
        <setHeader headerName="id">
          <xpath>//id/text()</xpath>
        </setHeader>
        <split>
          <xpath resultType="java.lang.String">//message_payload/text()</xpath>
          <log message="Routed ${header.id} to Number3 QUEUE"/>
          <to uri="activemq:queue:demo3?username=admin&amp;password=admin"/>
        </split>
      </when>
      <when>
        <xpath>//destination[text()='Number4']</xpath>
        <log message="Number4 route invoked"/>
        <setHeader headerName="id">
          <xpath>//id/text()</xpath>
        </setHeader>
        <split>
          <xpath resultType="java.lang.String">//message_payload/text()</xpath>
          <log message="Routed ${header.id} to Number4 QUEUE"/>
          <to uri="activemq:queue:demo4?username=admin&amp;password=admin"/>
        </split>
      </when>
      <when>
        <xpath>//destination[text()='Number5']</xpath>
        <log message="Number5 route invoked"/>
        <setHeader headerName="id">
          <xpath>//id/text()</xpath>
        </setHeader>
        <split>
          <xpath resultType="java.lang.String">//message_payload/text()</xpath>
          <log message="Routed ${header.id} to Number5 QUEUE"/>
          <to uri="activemq:queue:demo5?username=admin&amp;password=admin"/>
        </split>
      </when>
      <otherwise>
        <to uri="activemq:queue:demoDLQ?username=admin&amp;password=admin"/>
      </otherwise>
    </choice>
  </route>
</camelContext>

</blueprint>
